- hosts: localhost
  become: no
  tasks:
    - name: Fetch Terraform outputs
      command: terraform output -json
      register: terraform_outputs

    - name: Set Node Exporter IP
      set_fact:
        node_exporter_ip: "{{ terraform_outputs.stdout | from_json | json_query('node_exporter_ip.value') }}"

    - name: Set Prometheus Server IP
      set_fact:
        prometheus_server_ip: "{{ terraform_outputs.stdout | from_json | json_query('prometheus_server_ip.value') }}"

- hosts: all
  become: yes
  name: Setup Finance Me Microservice and Monitoring
  tasks:
    - name: Update and upgrade the system
      apt:
        upgrade: dist
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Deploy Finance Me microservice container
      docker_container:
        name: finance-me-microservice
        image: suguslove10/finance-me-microservice:v1
        state: started
        restart_policy: always
        ports:
          - "8084:8081"

    - name: Download and install Node Exporter
      shell: |
        wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz
        tar -xvf node_exporter-1.8.2.linux-amd64.tar.gz
        nohup ./node_exporter-1.8.2.linux-amd64/node_exporter > /dev/null 2>&1 &
      args:
        chdir: /opt

    - name: Create Prometheus configuration file from template
      template:
        src: prometheus.yml.j2
        dest: /home/ubuntu/prometheus.yml

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - /home/ubuntu/prometheus.yml:/etc/prometheus/prometheus.yml

    - name: Run Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
